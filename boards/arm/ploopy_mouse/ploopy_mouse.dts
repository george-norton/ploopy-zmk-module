/*
 * Copyright (c) 2025, George Norton
 * SPDX-License-Identifier: MIT
 */

/dts-v1/;

#include <rpi_pico/rp2040.dtsi>
#include "ploopy_mouse-pinctrl.dtsi"
#include "ploopy_mouse-layouts.dtsi"
#include <dt-bindings/zmk/matrix_transform.h>
#include <freq.h>

/ {
    model = "ploopy_mouse";
    compatible = "ploopy_mouse", "raspberrypi,rp2040";

    chosen {
        zephyr,sram = &sram0;
        zephyr,flash = &flash0;
        zephyr,flash-controller = &ssi;
        zephyr,code-partition = &code_partition;
        zmk,kscan = &kscan0;
    };

    xtal_clk: xtal-clk {
        compatible = "fixed-clock";
        clock-frequency = <12000000>;
        #clock-cells = <0>;
    };

    kscan0: kscan_0 {
        compatible = "zmk,kscan-gpio-direct";
        input-gpios
            = <&gpio0 14 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)> // Copy
            , <&gpio0 15 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)> // MB1
            , <&gpio0 17 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)> // MB5
            , <&gpio0 19 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)> // MB4
            , <&gpio0 21 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)> // MB3
            , <&gpio0 22 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)> // Paste
            , <&gpio0 23 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)> // MB2
            , <&gpio0 24 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)> // DPI
            ;
    };

    default_transform: matrix_transform {
        compatible = "zmk,matrix-transform";
        rows = <1>;
        columns = <8>;
        map = <
            RC(0,0) RC(0,1)       RC(0,6) RC(0,5)
            RC(0,2)        RC(0,4)
            RC(0,3)        RC(0,7)
        >;
    };

    sleep_config: rp2040_sleep {
        compatible = "raspberrypi,rp2040-sleep";
        sleep-en0 = <0x140007>;
        sleep-en1 = <0x6c00>;
        wake-en0 = <0xf3ffcf3f>;
        wake-en1 = <0x7c3f>;
        deep-sleep;
    };
};

&physical_layout0 {
    kscan = <&kscan0>; // Label of the kscan node this layout uses
    transform = <&default_transform>; // Label of the matrix transform this layout uses
};

#define PLOOPY_MOUSE_FLASH_SIZE_M 16

&flash0 {
    /* 16MB of flash minus the 0x100 used for
     * the second stage bootloader
     */
    reg = <0x10000000 DT_SIZE_M(PLOOPY_MOUSE_FLASH_SIZE_M)>;

    partitions {
        compatible = "fixed-partitions";
        #address-cells = <1>;
        #size-cells = <1>;

        /* Reserved memory for the second stage bootloader */
        second_stage_bootloader: partition@0 {
            reg = <0x00000000 0x100>;
            read-only;
        };

        /*
         * Start at the beginning of usable flash, PLOOPY_MOUSE_FLASH_SIZE_M MB minus the
         * second stage space and the 16 KiB reserved for settings
         */
        code_partition: partition@100 {
            label = "code";
            reg = <0x100 (DT_SIZE_M(PLOOPY_MOUSE_FLASH_SIZE_M) - 0x100 - DT_SIZE_K(16))>;
            read-only;
        };


        /* Set 16Kb of storage at the end of the of flash */
        storage_partition: partition@FFC000 {
            reg = <(DT_SIZE_M(PLOOPY_MOUSE_FLASH_SIZE_M) - DT_SIZE_K(16)) DT_SIZE_K(16)>;
        };
    };
};

&spi0 {
    pinctrl-0 = <&spi0_default>;
    pinctrl-names = "default";
    status = "okay";
    cs-gpios = <&gpio0 5 GPIO_ACTIVE_LOW>;
    clock-frequency = <DT_FREQ_M(2)>;
    mouse: mouse@0 {
        compatible = "pixart,pmw3360";
        status = "okay";
        reg = <0>;
        spi-max-frequency = <DT_FREQ_M(2)>;

        // pmw3360 driver parameters
        irq-gpios = <&gpio0 9 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        cpi = <1200>;
        rotate-180;
    };
};

/ {
    mouse_listener {
        compatible = "zmk,input-listener";
        device = <&mouse>;
    };
};

&gpio0 {
    status = "okay";
    gpio-reserved-ranges = < 1 3 4 6 8 10 11 16 18 20 25 27 29 >;
};

&adc {
    #address-cells = <1>;
    #size-cells = <0>;
    status = "okay";
    pinctrl-0 = <&adc_default>;
    pinctrl-names = "default";

    channel@0 {
        reg = <0>;
        zephyr,gain = "ADC_GAIN_1";
        zephyr,reference = "ADC_REF_INTERNAL";
        zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
        zephyr,resolution = <12>;
    };

    channel@2 {
        reg = <2>;
        zephyr,gain = "ADC_GAIN_1";
        zephyr,reference = "ADC_REF_INTERNAL";
        zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
        zephyr,resolution = <12>;
    };
};

/ {
    scroll_wheel: scroll_wheel {
        compatible = "ploopy,optical-encoder";
        status = "okay";
        poll-period = <10>;
        event-startup-delay = <1000>;
        steps = <28>;
        io-channels = <&adc 0>, <&adc 2>;
    };

    sensors: sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&scroll_wheel>;
        triggers-per-rotation = <14>;
    };
};

zephyr_udc0: &usbd {
    status = "okay";
};

&vreg {
    regulator-always-on;
    regulator-allowed-modes = <REGULATOR_RPI_PICO_MODE_NORMAL>;
};
